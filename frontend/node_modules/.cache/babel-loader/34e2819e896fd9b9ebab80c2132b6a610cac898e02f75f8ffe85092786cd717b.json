{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stack mern,mean,java\\\\uploading_img\\\\frontend\\\\src\\\\ImageUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const userId = localStorage.getItem('userId'); // Retrieve userId from localStorage\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:9000/images/${userId}`);\n        console.log('Images:', response.data.images);\n        setImages(response.data.images || []);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    if (userId) {\n      fetchImages(); // Fetch images associated with the user\n    }\n  }, [userId]); // Include userId in the dependency array\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('userId', userId); // Sending user ID along with the file\n\n      try {\n        const response = await axios.post('http://localhost:9000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Upload successful:', response.data);\n        fetchImages(); // Refresh the images after upload\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get(`http://localhost:9000/images/${userId}`);\n      console.log('Images:', response.data.images);\n      setImages(response.data.images || []);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  const deleteImage = async filename => {\n    try {\n      const response = await axios.delete(`http://localhost:9000/image/${filename}/${userId}`);\n      console.log('Delete response:', response.data);\n      fetchImages(); // Refresh images after deletion\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:9000/img/${image}`,\n            alt: `Image ${index}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteImage(image),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 3\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUpload, \"lJzFoX/S9FJ9InpRxWL7+nqjM80=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ImageUpload","_s","selectedFile","setSelectedFile","images","setImages","userId","localStorage","getItem","fetchImages","response","get","console","log","data","error","handleFileChange","event","target","files","handleUpload","formData","FormData","append","post","headers","deleteImage","filename","delete","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","image","index","src","alt","_c","$RefreshReg$"],"sources":["D:/full stack mern,mean,java/uploading_img/frontend/src/ImageUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ImageUpload() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [images, setImages] = useState([]);\r\n  const userId = localStorage.getItem('userId'); // Retrieve userId from localStorage\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:9000/images/${userId}`);\r\n        console.log('Images:', response.data.images);\r\n        setImages(response.data.images || []);\r\n      } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n      }\r\n    };\r\n  \r\n    if (userId) {\r\n      fetchImages(); // Fetch images associated with the user\r\n    }\r\n  }, [userId]); // Include userId in the dependency array\r\n  \r\n  \r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      formData.append('userId', userId); // Sending user ID along with the file\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:9000/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        console.log('Upload successful:', response.data);\r\n        fetchImages(); // Refresh the images after upload\r\n      } catch (error) {\r\n        console.error('Error uploading file:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:9000/images/${userId}`);\r\n      console.log('Images:', response.data.images);\r\n      setImages(response.data.images || []);\r\n    } catch (error) {\r\n      console.error('Error fetching images:', error);\r\n    }\r\n  };\r\n\r\n  const deleteImage = async (filename) => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:9000/image/${filename}/${userId}`);\r\n      console.log('Delete response:', response.data);\r\n      fetchImages(); // Refresh images after deletion\r\n    } catch (error) {\r\n      console.error('Error deleting image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n\r\n      <div>\r\n        <h2>Uploaded Images:</h2>\r\n        <ul>\r\n        {images.map((image, index) => (\r\n  <li key={index}>\r\n    <img src={`http://localhost:9000/img/${image}`} alt={`Image ${index}`} />\r\n    <button onClick={() => deleteImage(image)}>Delete</button>\r\n  </li>\r\n))}\r\n\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}